Isn’t This Physics and Not Computer Science? 


My new plan in introductory physics is to require students to demonstrate some ability to create a numerical calculation. Just to be clear, by “numerical calculation” – I mean to solve a problem by breaking that problem into many simpler problems. Typically, these problems are broken into small time steps and a computer is used to do all the boring calculations.
Previously, I have emphasized the idea of numerical calculations in class and even encouraged students to create their own. Starting now, that plan has changed. For me, it is no longer an optional topic. It is right in there along with the Momentum Principle and the Work-Energy Principle. Well, it isn’t really a principle, it’s more like a tool. I think that leaving numerical calculations out of an introductory physics course is like leaving calculus out of the same course. Sure you can do it, but it’s better if you include it.
In the past, there have been larger barriers for students to get into a numerical calculation such that many faculty just say “oh well”. This is no longer true (in my humble opinion). There are super simple tools like VPython and GlowScript (both excellent options). So there is no more excuse. And yes, I am talking to both students and faculty. Numerical calculations are just part of the way things are done. It would be a shame for students to never get a chance to practice this method.
So, how do I do this? Well, I have previously posted my notes on how I grade (Standards Based Grading mostly). The class mostly consists of short in-class assessments for which students can submit video screencast reassessments and this has been working very well. Now I just add a new assessment that is not connected to an in-class quiz and it is this:
That’s it. Of course, there are still some problems. Some students wait until the last minute and then have some type of technical difficulty. Other students spend time to create a program, but it ends up just being some type of input-output calculator instead of a numerical calculation. But overall, it’s great fun. Students come in with interesting ideas and the discussions almost always revolve around physics ideas instead of coding and syntax errors.
This is wrong. This numerical calculation is not computer science. When I think of computer science, I think of creating and exploring new algorithms in computer code. Creating a numerical calculation is just coding. Computer science is much more than just making code.
It’s also wrong another level. Student’s don’t have to be experts at computer coding to write a program. In fact, the great thing about humans is that they don’t JUST do ONE thing. Instead, they do all sorts of things. Here are some other comments about physics classes.
I can just imagine the first time a physics faculty told a class that they needed to draw a free body diagram of the forces on an object for the physics solutions. I wonder if a student complained that this was supposed to be a physics class and not an art class.
The last time I wrote about computational science I made the claim that numerical calculations are not any different than a theoretical calculation. Some people weren’t so happy with this idea.
Let me just add a couple of ideas about this. What is science all about? It’s all about building models. Well, it’s not only about building models. In order to call it “science” we have to see if that model agrees with real life. This checking for agreement is called an experiment.
I think most people will agree with my above definition of science. If so, you have to ask yourself “where do I put numerical calculations”? Are they experiments? Are they real life? Are they models? Well, they sure as heck aren’t real life (except for Flappy Birds – that’s real). If a numerical calculation doesn’t agree with real life, we like to call it something else. Suitable names would be either “art” or “computer game”. If the calculation does agree with real life, we call it a model.
Yes, many students had problems along the way to create their first numerical calculation. They started off confused and intimidated. But for those that pushed through these problems, they came out with their own creation. They had a program that ran and that they were proud of. It’s great fun.